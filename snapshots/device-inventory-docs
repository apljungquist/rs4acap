+ unset RUST_LOG
+ device-inventory help
Usage: device-inventory [OPTIONS] <COMMAND>

Commands:
  login        Login to a pool of shared devices
  add          Add a device
  deactivate   Deactivate any active device
  import       Import devices
  for-each     Run a command with environment variables set for each device
  list         List available devices
  activate     Activate an existing device
  return       Return any matching borrowed device
  remove       Remove a device
  dump         Print the device-inventory database to stdout
  load         Load the device-inventory database from stdin
  completions  Print a completion file for the given shell
  help         Print this message or the help of the given subcommand(s)

Options:
      --inventory <INVENTORY>  Location of the application data [env: DEVICE_INVENTORY_LOCATION=]
      --offline                [env: DEVICE_INVENTORY_OFFLINE=]
  -h, --help                   Print help
+ device-inventory help completions
Print a completion file for the given shell.

Example: `device-inventory completions zsh | source /dev/stdin`.

Usage: device-inventory completions <SHELL>

Arguments:
  <SHELL>
          [possible values: bash, elvish, fish, powershell, zsh]

Options:
  -h, --help
          Print help (see a summary with '-h')
+ device-inventory help activate
Activate an existing device

Usage: device-inventory activate [OPTIONS]

Options:
      --probe
          Probe devices for properties not indexed by the source.
          
          Note that devices found only in the VLT source are not probed.

      --reason <REASON>
          Reason why the device is being borrowed.
          
          Needed only to create a new VLT loan.

      --hours <HOURS>
          Number of hours to borrow a device.
          
          Used only when a new VLT loan is created.
          
          [default: 8]

      --destination <DESTINATION>
          [default: filesystem]

          Possible values:
          - filesystem:  Write information to the filesystem
          - environment: Print information as a shell script that can be sourced

      --alias <ALIAS>
          Consider only devices with a matching alias.
          
          Accepts a glob pattern.

  -a, --architecture <ARCHITECTURE>
          Consider only devices with a matching architecture
          
          [possible values: aarch64, armv7hf, armv7l, mips]

      --firmware <FIRMWARE>
          Consider only devices with a matching firmware version.
          
          Accepts the same version requirement syntax as Cargo, see <https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#version-requirement-syntax>
          
          Older firmware versions, which don't follow SemVer, are coerced into SemVer.

  -m, --model <MODEL>
          Consider only devices with a matching model.
          
          Accepts a glob pattern.

  -s, --status <STATUS>
          Consider only devices with a matching status
          
          [possible values: connected, on-loan]

  -h, --help
          Print help (see a summary with '-h')
+ device-inventory help add
Add a device

Usage: device-inventory add [OPTIONS] <ALIAS> <HOST> <USERNAME> <PASSWORD>

Arguments:
  <ALIAS>     An alias for the device unique within the inventory
  <HOST>      The IP address or hostname of the device
  <USERNAME>  The username of an administrator on the device, or root
  <PASSWORD>  The password of an administrator on the device, or of root

Options:
      --http-port <HTTP_PORT>    HTTP port to use, if different from default
      --https-port <HTTPS_PORT>  HTTPS port to use, if different from default
      --ssh-port <SSH_PORT>      SSH port to use, if different from default
  -h, --help                     Print help
+ device-inventory help deactivate
Deactivate any active device.

For devices activated using environment variables, the printed commands must be run.

Usage: device-inventory deactivate [OPTIONS]

Options:
      --dry-run
          

  -h, --help
          Print help (see a summary with '-h')
+ device-inventory help dump
Print the device-inventory database to stdout

Usage: device-inventory dump

Options:
  -h, --help  Print help
+ device-inventory help for-each
Run a command with environment variables set for each device

Usage: device-inventory for-each <PROGRAM> [ARGUMENTS]...

Arguments:
  <PROGRAM>       Program to run
  [ARGUMENTS]...  Arguments to pass to the program

Options:
  -h, --help  Print help
+ device-inventory help import
Import devices

Usage: device-inventory import

Options:
  -h, --help  Print help
+ device-inventory help list
List available devices

Usage: device-inventory list [OPTIONS]

Options:
      --probe
          Probe devices for properties not indexed by the source.
          
          Note that devices found only in the VLT source are not probed.

      --mdns
          Consider devices from mDNS
          
          [env: DI_MDNS=]

      --vlt
          Consider loans and devices from the VLT
          
          [env: DI_VLT=]

      --alias <ALIAS>
          Consider only devices with a matching alias.
          
          Accepts a glob pattern.

  -a, --architecture <ARCHITECTURE>
          Consider only devices with a matching architecture
          
          [possible values: aarch64, armv7hf, armv7l, mips]

      --firmware <FIRMWARE>
          Consider only devices with a matching firmware version.
          
          Accepts the same version requirement syntax as Cargo, see <https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#version-requirement-syntax>
          
          Older firmware versions, which don't follow SemVer, are coerced into SemVer.

  -m, --model <MODEL>
          Consider only devices with a matching model.
          
          Accepts a glob pattern.

  -s, --status <STATUS>
          Consider only devices with a matching status
          
          [possible values: connected, on-loan]

  -h, --help
          Print help (see a summary with '-h')
+ device-inventory help load
Load the device-inventory database from stdin

Usage: device-inventory load

Options:
  -h, --help  Print help
+ device-inventory help login
Login to a pool of shared devices

Usage: device-inventory login [OPTIONS]

Options:
  -u, --username <USERNAME>  The username to authenticate as, if not using a session id
  -h, --help                 Print help
+ device-inventory help remove
Remove a device

Usage: device-inventory remove --alias <ALIAS>

Options:
      --alias <ALIAS>  The alias of the device to remove
  -h, --help           Print help
+ device-inventory help return
Return any matching borrowed device.

This will also deactivate and remove the devices.

Note: If the device was activated in the environment, you must `eval` the output.

Usage: device-inventory return [OPTIONS]

Options:
      --alias <ALIAS>
          Consider only devices with a matching alias.
          
          Accepts a glob pattern.

  -a, --architecture <ARCHITECTURE>
          Consider only devices with a matching architecture
          
          [possible values: aarch64, armv7hf, armv7l, mips]

      --firmware <FIRMWARE>
          Consider only devices with a matching firmware version.
          
          Accepts the same version requirement syntax as Cargo, see <https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#version-requirement-syntax>
          
          Older firmware versions, which don't follow SemVer, are coerced into SemVer.

  -m, --model <MODEL>
          Consider only devices with a matching model.
          
          Accepts a glob pattern.

  -s, --status <STATUS>
          Consider only devices with a matching status
          
          [possible values: connected, on-loan]

  -h, --help
          Print help (see a summary with '-h')
